last_obstacle_spawn_time = pygame.time.get_ticks()

# Poniżej wrzucam modyfikację kodu dot. ruchu postaci, dzięki któremu przeszkody będą w odpowiednich odległościach

while running:
 lanes_with_obstacles = set()
    for obstacle in obstacles:
        lanes_with_obstacles.add(obstacle.lane)

    for lane in [0, 1, 2]:
        if lane not in lanes_with_obstacles:
            if len(obstacles) == 0:
                obstacle = Obstacle(lane)  # Utworzenie nowej przeszkody w przypadku braku innych przeszkód
                obstacles.add(obstacle)
                all_sprites.add(obstacle)
            else:
                last_obstacle = max(obstacles, key=lambda o: o.rect.y)
                if last_obstacle.rect.y > MIN_DISTANCE_BETWEEN_OBSTACLES:
                    if pygame.time.get_ticks() - last_obstacle_spawn_time > 550: # Ważna linijka pod kątem poziomu trudności, zbyt mała wartość zmiennej może sprawic, że przeszkody będą pojawiać się na wszystkich torach jednocześnie
                        obstacle_type = random.choice([Obstacle, Obstacle2])
                        obstacle = obstacle_type(lane)  # Wybór losowego typu przeszkody i utworzenie w odpowiednim paśmie
                        obstacles.add(obstacle)
                        all_sprites.add(obstacle)
                        last_obstacle_spawn_time = pygame.time.get_ticks()
